clear;
clc;

addpath(genpath('C:/Users/paramita/Documents/MATLAB/convex relaxation'))
%requires to be changed
%addpath(genpath('/home/paramita/Documents/MATLAB/convex relaxation'))

min_sample=500;
diff = 10;
max_sample=500;
%no_of_loop = (max_sample-min_sample)/diff + 1;
dim = 256;%specify
supp =128;
max_itr = 1;

hamming_dist = zeros(1,max_sample);
hamming_dist.itr = 0;
l2_dist = zeros(1,max_sample);
l2_dist.itr = 0;
lambda = 1;


opts = [];
%opts.handle = @f_group_count;%give function handle
%opts.V = 1:dim;
%create G and w
%[ G w ] = createG( dim , no_of_partition);
%opts.handle = f_group_count(G,w);
opts.handle = f_r(dim);

for itr = 1:max_itr
    data = create_data( dim , supp , max_sample  );
    disp(itr)
    for sample_size = min_sample:diff: max_sample
        disp(sample_size)
        %write how to get X,Y from data
        opts.X=data.X(1:sample_size,:);
        opts.Y = data.Y(1:sample_size);
        opts.lambda = lambda;
        w = apg(@gradient_lasso, @proximal_lasso, size(opts.X,2), opts);

        hamming_dist(sample_size) = (hamming_dist(sample_size)*itr+(pdist([w' ; w0'] , 'hamming' ) )/(itr+1);
        find_hamming_dist( hamming_dist , w , data.w0 );
        l2_dist =  find_l2_dist( l2_dist , w , data.w0  );
        
    end
end

%code for plotting dimension of w versus l2 and hamming distance between
%solution and optimal
figure
title('sample size Vs hamming distance and l2-distance')
%plot(sample_size, hamming_dist.pen , '--r*');
% hold on
% plot(sample_size , hamming_dist.lasso, '--go');
% hold on
% plot(sample_size , hamming_dist.ridge, '--bo');
% hold on
% plot(sample_size , hamming_dist.GL, '--yo');
% hold on
% plot(sample_size , hamming_dist.GL_w, '--co');